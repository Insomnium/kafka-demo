buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.bmuschko:gradle-docker-plugin:4.1.0")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.docker-spring-boot-application'

group = 'net.ins'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/libs-milestone" }
}

ext['springCloudVersion'] = 'Greenwich.M3'

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.cloud:spring-cloud-stream-binder-kafka')
    implementation('org.springframework.cloud:spring-cloud-stream')
    implementation('io.micrometer:micrometer-core')
    implementation('io.micrometer:micrometer-registry-prometheus')
//    implementation('org.springframework.cloud:spring-cloud-stream-reactive')
    implementation('org.springframework.kafka:spring-kafka')
    compileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('io.projectreactor:reactor-test')
    testImplementation('org.springframework.cloud:spring-cloud-stream-test-support')
    testImplementation('org.springframework.kafka:spring-kafka-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

docker {
    springBootApplication {
        baseImage = 'openjdk:11.0.1-jdk-stretch'
        tag = 'net.ins:kafka-demo:0.0.1'
        ports = [8080]
    }
}